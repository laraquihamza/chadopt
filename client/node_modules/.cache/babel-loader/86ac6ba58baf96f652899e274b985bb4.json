{"ast":null,"code":"var _jsxFileName = \"/home/hamza/test_recrutement_dev/client/src/components/Body.js\";\nimport React, { Component, Fragment } from 'react';\nimport CatCard from './CatCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Body extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      cats: []\n    };\n    this.catcards = /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 14\n    }, this);\n  }\n\n  async componentDidMount() {\n    fetch('http://localhost:5000/getcats').then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({ ...this.state,\n        cats: data\n      });\n    });\n    this.catcards = this.state.cats.map(item => /*#__PURE__*/_jsxDEV(CatCard, {\n      name: item.name,\n      birthdate: item.birthdate,\n      race: item.race,\n      gender: item.gender,\n      city: item.city,\n      description: item.description,\n      image: item.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"D\\xE9couvrez les chats pr\\xE8s de chez vous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cats-container\",\n        children: this.catcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/home/hamza/test_recrutement_dev/client/src/components/Body.js"],"names":["React","Component","Fragment","CatCard","Body","state","cats","catcards","componentDidMount","fetch","then","response","json","data","console","log","setState","map","item","name","birthdate","race","gender","city","description","image","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACnB;AAACC,MAAAA,IAAI,EAAC;AAAN,KADmB;AAAA,SAEzBC,QAFyB,gBAEhB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFgB;AAAA;;AAGF,QAAjBC,iBAAiB,GAAG;AACtBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc,EAAC,GAAG,KAAKX,KAAT;AAAgBC,QAAAA,IAAI,EAACO;AAArB,OAAd;AACC,KALL;AAOA,SAAKN,QAAL,GACA,KAAKF,KAAL,CAAWC,IAAX,CAAgBW,GAAhB,CAAqBC,IAAD,iBAChB,QAAC,OAAD;AAAU,MAAA,IAAI,EAAEA,IAAI,CAACC,IAArB;AAA2B,MAAA,SAAS,EAAED,IAAI,CAACE,SAA3C;AACA,MAAA,IAAI,EAAEF,IAAI,CAACG,IADX;AAEA,MAAA,MAAM,EAAEH,IAAI,CAACI,MAFb;AAGA,MAAA,IAAI,EAAEJ,IAAI,CAACK,IAHX;AAIA,MAAA,WAAW,EAAEL,IAAI,CAACM,WAJlB;AAKA,MAAA,KAAK,EAAEN,IAAI,CAACO;AALZ;AAAA;AAAA;AAAA;AAAA,YADJ,CADA;AAWH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA,kBACK,KAAKnB;AADV;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAhCwB;;AAmC7B,eAAeH,IAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport CatCard from './CatCard';\n\nclass Body extends Component {\n    state={cats:[]}\n    catcards=<Fragment></Fragment>\n    async componentDidMount() {\n        fetch('http://localhost:5000/getcats')\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n            this.setState({...this.state, cats:data})\n            }\n        )\n        this.catcards=\n        this.state.cats.map((item) => (\n            <CatCard  name={item.name} birthdate={item.birthdate}\n            race={item.race}\n            gender={item.gender}\n            city={item.city}\n            description={item.description}\n            image={item.image}\n      />\n        ))\n\n    }\n    render() {\n        return (\n            <div class=\"body\">\n                <h1>Découvrez les chats près de chez vous</h1>\n                <div class=\"cats-container\">\n                    {this.catcards}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}